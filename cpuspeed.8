.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH CPUSPEED "8" "October 08, 2008" "cpuspeed v1.5.1" "Program Options"
.SH NAME
cpuspeed \- user-space cpu frequency scaling program, v1.5.1
.SH SYNOPSIS
.B cpuspeed
[\fIOptions\fR]
.SH DESCRIPTION
cpuspeed v1.5.1
.PP
This program monitors the system's idle percentage and reduces or raises the
CPUs' clock speeds and voltages accordingly to minimize power consumption
when idle and maximize performance when needed.  This is the default.
.PP
The program may also optionally be configured to reduce the CPUs' clock
speeds if the temperature gets too high, NOT minimize their speeds if the
computer's AC adapter is disconnected or maximize their speeds when the AC
adapter is connected.
.PP
By default this program will manage every CPU found in the system.
.IP
Options:
.HP
\fB\-d\fR
.IP
Tells the process to daemonize itself (run in background).
.HP
\fB\-i\fR <interval>
.IP
Sets the interval between idle percentage tests and possible speed
changes in tenths of a second (default is 20).
.HP
\fB\-p\fR <fast up> <threshold>
.IP
Sets the CPU core idle percentage thresholds. <fast up> is the idle
percentage below which a CPU core will be set to the highest possible
speed.  <threshold> is the idle percentage above which a CPU core's
speed will be decreased and below which a CPU core's speed will be
increased (defaults are 10 and 25).
.HP
\fB\-m\fR <minimum speed>
.IP
Sets the minimum speed in KHz below which a CPU core will not be set.
.HP
\fB\-M\fR <maximum speed>
.IP
Sets the maximum speed in KHz above which a CPU core will not be set.
.HP
\fB\-n\fR
.IP
Do not treat niced programs as idle time.
.HP
\fB\-w\fR
.IP
Do not treat time waiting for IO as idle time.
.HP
\fB\-t\fR <temp file> <maxtemp>
.IP
Sets the ACPI temperature file and the temperature at which CPUs
will be set to minimum speed.
.HP
\fB\-T\fR <interval>
.IP
Sets the interval at which the temperature will be polled in
tenths of a second (default is 10).
(Requires the '\-t' option above.)
.HP
\fB\-a\fR <AC file>
.IP
Sets the ACPI AC adapter state file and tells the program to set
the CPUs to minimum speed when the AC adapter is disconnected.
(This is the default but is changeable by the '\-D' option below).
.HP
\fB\-A\fR <interval>
.IP
Sets the interval at which the AC adapter state will be polled in
tenths  of a second (default is 50).
(Requires the '\-a' option above.)
.HP
\fB\-C\fR
.IP
Run at maximum speed when AC adapter is connected.
(Requires the '\-a' option above.)
.HP
\fB\-D\fR
.IP
Do NOT force minimum speed when AC adapter is disconnected.
(Requires the '\-a' option above.)
.HP
\fB\-r\fR
.IP
Restores previous speed on program exit.
.HP
\fB\-S\fR <CPU core 1> [[<CPU core 2>] ...]
.IP
Manage only a single group of CPU cores.  All of the specified
cores will controlled as a single group (locked to the same speed)
and are in the range 0 to n-1 where 'n' is the total number of CPU
cores in the system.  Note that when specifying multiple cores the
list must be enclosed in quotes.  Without this option the program
creates copies of itself to manage every core of every CPU in the
system and automatically determines core groups. If you are running
on an old kernel and get an error message about not being able to
open an "affected_cpus" file then you must run this program
separately for each group of cores that must be controlled together
(which probably means for each physical CPU) and use this option.
.SS "Notes:"
To have a CPU core stay at the highest clock speed to maximize performance send
the process controlling that CPU core the SIGUSR1 signal.
.PP
To have a CPU core stay at the lowest clock speed to maximize battery life send
the process controlling that CPU core the SIGUSR2 signal.
.PP
To resume having a CPU core's clock speed dynamically scaled send the process
controlling that CPU core the SIGHUP signal.
.PP
Many modern Linux systems support in-kernel cpu frequency scaling. The
cpuspeed daemon only works in conjunction with the 'userspace' frequency
scaling governor. Other governors, such as 'ondemand' and 'conservative',
rely on the Linux kernel to adjust cpu frequencies on the fly without the
need of any user-space assistance, such as that provided by cpuspeed.
.PP
Red Hat and Fedora distributions employ a unified configuration file
for both scenarios, as well as a cpuspeed init script that will configure
either cpuspeed or in-kernel cpu frequency scaling, as appropriate.
.SH "FILES"
.na
.nf
/etc/sysconfig/cpuspeed, configuration file
/etc/init.d/cpuspeed, initialzation script
/usr/sbin/cpuspeed, cpuspeed program
.SH "SEE ALSO"
.PP
The CPUSpeed web page:
  \fB http://carlthompson.net/Software/CPUSpeed\fR
.SH "LICENSE"
.PP
CPUSpeed is released under the GNU General Public License version 2 (or if
you wish any later version). This license allows you to use, copy,
distribute and modify the software with very few restrictions. The full
text of the license may be found here:
  \fBhttp://carlthompson.net/Software/CPUSpeed/License\fR
.SH "AUTHOR(S):"
.TP
CPUSpeed daemon, original init script and configuration file:
.na
.nf
Carl Thompson \- cet [at] carlthompson.net
    (copyright 2002 \- 2008)
.TP
Modernized init script, configuration file and man page:
.na
.nf
Dave Jones \- davej [at] redhat.com
Michal Jaegermann \- michal [at] harddata.com
Jarod Wilson \- jwilson [at] redhat.com
